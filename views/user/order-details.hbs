<section class="order-details page-wrapper">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <ul class="list-inline dashboard-menu text-center">
                    <li><a href="/profile">Profile Details</a></li>
                    <li><a href="/address">Address</a></li>
                    <li><a href="/wallet">Wallet</a></li>
                    <li><a href="/orders" class="active">Orders</a></li>
                    <li><a href="/referrals">Referrals</a></li> 
                </ul>
                <div class="dashboard-wrapper user-dashboard">
                    <div class="order-details-content">
                        <h3>Order Details</h3>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Order ID</th>
                                    <th>Date</th>
                                    <th>Total Items</th>
                                    <th>{{#if order.coupon.code}}Coupon{{/if}}</th>
                                    <th>{{#if order.coupon.code}}Discount Amount{{/if}}</th>
                                    <th>Total Price</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>#{{order._id}}</td>
                                    <td>{{formatDate order.createdAt}}</td>
                                    <td>{{order.items.length}}</td>
                                    <td>{{#if order.coupon.code}}<p>{{order.coupon.code}}</p>{{/if}}</td>
                                    <td><p>{{#if order.coupon.code}}{{order.coupon.discountAmount}}{{/if}}</p></td>
                                    <td>${{order.totalAmount}}</td>
                                    <td><span class="label label-{{order.orderStatus}} btn btn-primary">{{order.orderStatus}}</span></td>
                                </tr>
                            </tbody>
                        </table>
                        <h4>Items in this Order</h4>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Quantity</th>
                                    <th>Size</th>
                                    <th>Price</th>
                                    <th>Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                {{#each order.items}}
                                <tr>
                                    <td>{{this.product.name}}</td>
                                    <td>{{this.quantity}}</td>
                                    <td>{{this.size}}</td>
                                    <td>${{this.price}}</td>
                                    <td>${{multiply this.quantity this.price}}</td>
                                </tr>
                                {{/each}}
                            </tbody>
                        </table>
                        <h4>Shipping Address</h4>
                        <p>{{order.address.place}}, {{order.address.houseNumber}}, {{order.address.street}}, {{order.address.city}}, {{order.address.zipcode}}, {{order.address.country}}</p>
                        <h4>Payment Method</h4>
                        <p>{{order.paymentMethod}}</p>
                        <h4>Payment Status</h4>
                        <p>{{order.paymentStatus}}</p>
                        {{#if (and (eq order.paymentMethod 'Razorpay') (eq order.paymentStatus 'Failed'))}}
                        <button class="btn btn-main btn-small" id="retryPaymentBtn">Retry Payment</button>
                        {{else}}
                            {{#if (or (eq order.paymentMethod 'Wallet') (eq order.paymentMethod 'Razorpay'))}}
                                <a class="btn btn-main btn-small" id="cancelOrderBtn">Cancel Order</a>
                            {{/if}}
                        {{/if}}
                        {{#ifCond order.orderStatus '===' 'Delivered'}}
                        <a class="btn btn-main btn-small" href="/orders/{{order._id}}/return">Return Order</a>
                        {{/ifCond}}
                        {{#if (or (eq order.paymentMethod 'Wallet') (eq order.paymentMethod 'Razorpay') (eq order.orderStatus 'Delivered'))}}
                        <a class="btn btn-main btn-small" href="/orders/{{order._id}}/invoice">Download Invoice</a>
                        {{/if}}
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Cancel Order
    document.getElementById('cancelOrderBtn')?.addEventListener('click', function () {
        Swal.fire({
            title: 'Are you sure?',
            text: "Do you want to cancel this order?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, cancel it!'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch('/orders/{{order._id}}/cancel', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                }).then(response => {
                    return response.json().then(data => {
                        if (response.ok) {
                            Swal.fire('Cancelled!', 'Your order has been cancelled.', 'success').then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire('Error!', data.message || 'There was a problem cancelling your order.', 'error');
                        }
                    });
                }).catch(error => {
                    console.error('Error:', error);
                    Swal.fire('Error!', 'An unexpected error occurred.', 'error');
                });
            }
        });
    });

    // Retry Payment
    document.getElementById('retryPaymentBtn')?.addEventListener('click', function () {
        fetch('/api/create-order', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                orderId: '{{order._id}}'
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success && data.razorpayOrderId) {
                const options = {
                    key: data.razorpayKeyId,
                    amount: data.totalAmount * 100, // in paise
                    currency: 'INR',
                    name: 'Hossom Shirts',
                    description: 'Order Payment',
                    order_id: data.razorpayOrderId,
                    handler: function (response) {
                        // Verify payment on the server
                        fetch('/api/verify-payment', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(response)
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire({
                                    title: 'Payment Successful',
                                    text: 'Your order has been placed successfully.',
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                }).then(() => {
                                    window.location.href = '/confirm';
                                });
                            } else {
                                Swal.fire({
                                    title: 'Payment Failed',
                                    text: 'There was an issue with your payment. Please try again.',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                }).then(() => {
                                    // Redirect to orders page
                                    window.location.href = '/orders';
                                });
                            }
                        })
                        .catch(error => {
                            console.error('Payment verification failed:', error);
                            Swal.fire({
                                title: 'Payment Verification Failed',
                                text: 'There was an error verifying your payment. Please contact support.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        });
                    },
                    prefill: {
                        name: data.user.name,
                        email: data.user.email,
                        contact: data.user.phone
                    },
                    notes: {
                        address: data.address
                    },
                    theme: {
                        color: '#3399cc'
                    }
                };
                const rzp = new Razorpay(options);
                rzp.open();
            } else {
                Swal.fire({
                    title: 'Order Creation Failed',
                    text: data.message || 'There was an error creating your order. Please try again.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        })
        .catch(error => {
            console.error('Order creation failed:', error);
            Swal.fire({
                title: 'Order Creation Failed',
                text: 'There was an error creating your order. Please try again.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        });
    });
</script>
